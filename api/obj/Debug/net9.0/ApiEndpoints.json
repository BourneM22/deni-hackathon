[
  {
    "ContainingType": "api.Controllers.AuthController",
    "Method": "Login",
    "RelativePath": "api/auth/login",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "api.DTO.LoginRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "api.Controllers.AuthController",
    "Method": "ResetPassword",
    "RelativePath": "api/auth/reset-password",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "email",
        "Type": "api.Models.Email",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "api.Controllers.AuthController",
    "Method": "Register",
    "RelativePath": "api/auth/signin",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "registerRequest",
        "Type": "api.DTO.RegisterRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "api.Controllers.AuthController",
    "Method": "CheckExistingEmail",
    "RelativePath": "api/auth/validate/email",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "email",
        "Type": "api.Models.Email",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "api.Controllers.ChatBotController",
    "Method": "SendPrompt",
    "RelativePath": "api/chatbot",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "chatBotRequest",
        "Type": "api.DTO.ChatBotRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "api.Controllers.NoteTagController",
    "Method": "GetAllNoteTags",
    "RelativePath": "api/note-tags",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "api.Controllers.NoteTagController",
    "Method": "AddNewNoteTag",
    "RelativePath": "api/note-tags",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "noteTagRequest",
        "Type": "api.DTO.NoteTagRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "api.Controllers.NoteTagController",
    "Method": "UpdateNoteTag",
    "RelativePath": "api/note-tags/{noteTagId}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "updateNoteTagRequest",
        "Type": "api.DTO.UpdateNoteTagRequest",
        "IsRequired": true
      },
      {
        "Name": "noteTagId",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "api.Controllers.NoteTagController",
    "Method": "DeleteNoteTag",
    "RelativePath": "api/note-tags/{noteTagId}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "noteTagId",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "api.Controllers.NoteController",
    "Method": "GetAllNotes",
    "RelativePath": "api/notes",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "tagId",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "search",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "api.Controllers.NoteController",
    "Method": "AddNewNote",
    "RelativePath": "api/notes",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "newNoteRequest",
        "Type": "api.DTO.NoteRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "api.Controllers.NoteController",
    "Method": "GetNoteById",
    "RelativePath": "api/notes/{noteId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "noteId",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "api.Controllers.NoteController",
    "Method": "UpdateNote",
    "RelativePath": "api/notes/{noteId}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "updateNoteRequest",
        "Type": "api.DTO.UpdateNoteRequest",
        "IsRequired": true
      },
      {
        "Name": "noteId",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "api.Controllers.NoteController",
    "Method": "DeleteNote",
    "RelativePath": "api/notes/{noteId}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "noteId",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "api.Controllers.PriorityController",
    "Method": "GetAllPriorities",
    "RelativePath": "api/priorities",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "api.Controllers.PriorityController",
    "Method": "AddNewPriority",
    "RelativePath": "api/priorities",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "newPriority",
        "Type": "api.Models.Priority",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "api.Controllers.PriorityController",
    "Method": "UpdatePriority",
    "RelativePath": "api/priorities/{priorityId}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "updatePriorityRequest",
        "Type": "api.DTO.UpdatePriorityRequest",
        "IsRequired": true
      },
      {
        "Name": "priorityId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "api.Controllers.PriorityController",
    "Method": "DeletePriority",
    "RelativePath": "api/priorities/{priorityId}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "priorityId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "api.Controllers.ReminderController",
    "Method": "GetAllReminders",
    "RelativePath": "api/reminders",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "isDone",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "date",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "monthYear",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "api.Controllers.ReminderController",
    "Method": "AddNewReminder",
    "RelativePath": "api/reminders",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "reminderRequest",
        "Type": "api.DTO.ReminderRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "api.Controllers.ReminderController",
    "Method": "GetAllReminders",
    "RelativePath": "api/reminders/{reminderId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "reminderId",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "api.Controllers.ReminderController",
    "Method": "UpdateReminder",
    "RelativePath": "api/reminders/{reminderId}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "updateReminderRequest",
        "Type": "api.DTO.UpdateReminderRequest",
        "IsRequired": true
      },
      {
        "Name": "reminderId",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "api.Controllers.ReminderController",
    "Method": "DeleteReminder",
    "RelativePath": "api/reminders/{reminderId}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "reminderId",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "api.Controllers.ReminderController",
    "Method": "UpdateDoneStatus",
    "RelativePath": "api/reminders/{reminderId}/done",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "reminderId",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "api.Controllers.SoundboardFilterController",
    "Method": "GetAllSoundboardFilters",
    "RelativePath": "api/soundboard-filters",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "api.Controllers.SoundboardFilterController",
    "Method": "AddNewSoundboardFilter",
    "RelativePath": "api/soundboard-filters",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "soundboardFilterRequest",
        "Type": "api.DTO.SoundboardFilterRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "api.Controllers.SoundboardFilterController",
    "Method": "UpdateSoundboardFilter",
    "RelativePath": "api/soundboard-filters/{soundboardFilterId}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "updateSoundboardFilterRequest",
        "Type": "api.DTO.UpdateSoundboardFilterRequest",
        "IsRequired": true
      },
      {
        "Name": "soundboardFilterId",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "api.Controllers.SoundboardFilterController",
    "Method": "DeleteSoundboardFilter",
    "RelativePath": "api/soundboard-filters/{soundboardFilterId}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "soundboardFilterId",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "api.Controllers.SoundboardController",
    "Method": "GetAllSoundboards",
    "RelativePath": "api/soundboards",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "filterId",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "api.Controllers.SoundboardController",
    "Method": "AddNewSoundboard",
    "RelativePath": "api/soundboards",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "soundboardRequest",
        "Type": "api.DTO.SoundboardRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "api.Controllers.SoundboardController",
    "Method": "GetSoundboardById",
    "RelativePath": "api/soundboards/{soundboardId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "soundboardId",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "api.Controllers.SoundboardController",
    "Method": "UpdateSoundboard",
    "RelativePath": "api/soundboards/{soundboardId}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "updateSoundboardRequest",
        "Type": "api.DTO.UpdateSoundboardRequest",
        "IsRequired": true
      },
      {
        "Name": "soundboardId",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "api.Controllers.SoundboardController",
    "Method": "DeleteSoundboard",
    "RelativePath": "api/soundboards/{soundboardId}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "soundboardId",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "api.Controllers.SoundboardController",
    "Method": "GetSoundboardAudioById",
    "RelativePath": "api/soundboards/{soundboardId}/audio",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "soundboardId",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "api.Controllers.SpeechController",
    "Method": "TranscribeAudio",
    "RelativePath": "api/speech/transcribe",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "file",
        "Type": "Microsoft.AspNetCore.Http.IFormFile",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "api.Controllers.TextToSpeechController",
    "Method": "SendTextToSpeech",
    "RelativePath": "api/tts/audio",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "textToSpeechRequest",
        "Type": "api.DTO.TextToSpeechRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "api.Controllers.UserController",
    "Method": "GetUserInfo",
    "RelativePath": "api/user",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "api.Controllers.UserController",
    "Method": "UpdateUserInfo",
    "RelativePath": "api/user",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "updateUserRequest",
        "Type": "api.DTO.UpdateUserRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "api.Controllers.UserController",
    "Method": "GetProfilePictureImg",
    "RelativePath": "api/user/profile-picture",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "api.Controllers.UserController",
    "Method": "UpdateUserProfilePicture",
    "RelativePath": "api/user/profile-picture",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "profilePicture",
        "Type": "Microsoft.AspNetCore.Http.IFormFile",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "api.Controllers.UserController",
    "Method": "DeleteUserProfilePicture",
    "RelativePath": "api/user/profile-picture",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  }
]